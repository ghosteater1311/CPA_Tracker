name: Build CPATracker

on:
  push:
    tags:
      - 'v*'   # Run workflow on version tags like v1.0, v1.1 etc.
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.6.0'

      - name: Configure & Build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_PREFIX_PATH=$Qt6_DIR -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      # Windows Deployment
      - name: Deploy Qt (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd build/Release
          windeployqt CPATracker.exe

      # macOS Deployment
      - name: Deploy Qt (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd build
          macdeployqt CPATracker.app

      # Linux Deployment
      - name: Deploy Qt (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 libxcb-cursor0
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          cp resources/CPATracker.desktop build/
          cp resources/icons/CPATracker.png build/
          ./linuxdeployqt-continuous-x86_64.AppImage build/CPATracker -appimage -verbose=2
          mv CPATracker-*.AppImage build/CPATracker-${{ github.ref_name }}-x86_64.AppImage
          ls -lh build 

      - name: Show build outputs
        run: ls -R build

      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: CPATracker-Windows
          path: build/Release/*.exe

      - name: Upload Artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: CPATracker-macOS
          path: build/**/*.app
        
      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: CPATracker-Linux
          path: build/CPATracker-${{ github.ref_name }}-x86_64.AppImage
          if-no-files-found: error
          compression-level: 6
          overwrite: false
          include-hidden-files: false